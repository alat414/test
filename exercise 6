/*
You will write a program that allows the user to enter 10 songs
and their artists into a playlist and will sort the entries by artist order.
The program should use a 10 element array of structure objects that holds two string variables:
artist and title.  Once the data has been read in and stored,
it should sort the entries in ascending order by artist.
It should then display the sorted array with appropriate headings.
Modularity:   The main function should create the Playlist object
and call at least three other functions:
1.	Get the data from the user.
Using a loop, have the user populate the playlist object array with 10 artist
and songs in no particular order.
No validation is necessary.
However, you should use the C++ getline function
instead of cin so that the user can type spaces in the name and song title.
2.	Sort the list.  You may use either the bubble sort
or the selection sort to sort your playlist.
3.	Display the list.  The function should display the artist
and title in sorted order with appropriate headings.

Sample Output:
Playlist
Artist			Title
======================================
Cream			Sunshine of Your Love
Jimi Hendrix		All Along the Watchtower
Stevie Ray Vaughn	Texas Flood
ZZ Top			La Grange
Etc.

Your programs should conform to the Programming Style Requirements as listed in Blackboard under Lab Assignments.
In addition, all output should be labeled appropriately (Ex. Number of slices are:   nn).
Turn in yoursource (.cpp) file(s) to Blackboard (be sure to attach all files before pressing SUBMIT).

*/
#include<iostream>
#include<cstring>

using namespace std;

void swap(string &, string &);
const int NUM_SONGS = 10;
int main(){
	string songName[NUM_SONGS], artistName[NUM_SONGS], entireName[NUM_SONGS],temp;

	cout << "Enter " << NUM_SONGS << " songs titles and then their artist name in the next line. repeat 10 times: " << endl;
	for(int i = 0; i < NUM_SONGS; i++){
		getline(cin,songName[i]);
		getline(cin,artistName[i]);
		entireName[i] = artistName[i] + " || " + songName[i];
	}
	int min_index;
	string min_value;

	for(int start_index = 0; start_index < (NUM_SONGS-1);start_index++){
		min_index = start_index;
		min_value = entireName[start_index];

		for(int index = start_index + 1; index < NUM_SONGS; index++){
			if(entireName[index] < min_value){
				min_value = entireName[index];
				min_index = index;
			}
		}
		swap(entireName[min_index], entireName[start_index]);
	}
	cout << "Playlist" << endl;
	cout << "Artist         Song Title" << endl;
	cout << "=========================" << endl;
	for(int i = 0; i < NUM_SONGS; i++){
		cout << entireName[i] << endl;
	}
	return 0;

}

void swap(string &a, string &b)
{
	string temp = a;
	a = b;
	b = temp;
}
